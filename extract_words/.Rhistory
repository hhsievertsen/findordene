filter(str_detect(ord,substr(df_bingos$bingos[1],1,1)))
View(temp)
temp<-df%>%
filter(str_detect(ord,substr(df_bingos$bingos[1],1,1)))%>%                # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",df$bingos[1],"]",sep="")))!=0)
View(df)
temp<-df%>%
filter(str_detect(ord,substr(df_bingos$bingos[1],1,1)))%>%                # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",df_bingos$bingos[1],"]",sep="")))!=0)
paste("[",df_bingos$bingos[1],"]",sep="")
View(temp)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,substr(df_bingos$bingos[1],1,1)))%>%                # Remove words not including the red letter
mutate(nchar(str_remove_all(ord,paste("[",df_bingos$bingos[1],"]",sep="")))==0)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,substr(df_bingos$bingos[1],1,1)))%>%                # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",df_bingos$bingos[1],"]",sep="")))==0)
View(letters)
View(temp)
library("tidyverse")
library("stringi")
rm(list=ls())
setwd("/Users/hhs/Dropbox/Private documents/findordene/admin/extract_words")
# load data
df<-read_delim("RO2012 fuldformsliste 2020.csv",delim = ";",col_names=FALSE)
df<-data.frame(ord=c(df$X2))
# Cleaning
set.seed(2023)
# remove short words
df<-df%>%filter(nchar(ord)>3)
# remove if it contains any special symbols
letters_only <- function(x) !grepl("[^A-Za-z]", x)
df<-df%>%filter(letters_only(ord))
# make all letters lowcase
df<-df%>%mutate(ord=tolower(ord))
# no duplicates
df<-unique(df)
# find potential bingo words
df$bingos<-gsub('(?:(.)(?=(.*)\\1))', '', df$ord, perl = TRUE)
df_bingos<-filter(df,nchar(bingos)==7)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,substr(df_bingos$bingos[1],1,1)))%>%                # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",df_bingos$bingos[1],"]",sep="")))==0)
%>%mutate(letters=df$bingos[1])%>%select(-bingos)%>%
letters<-list()
words<-list()
letters[1]<-df_bingos$bingos[1]
View(letters)
words[1]<-temp$ord
words[1]<-list(temp$ord)
View(words)
letterstoconsider<-df_bingos$bingos[1]
redletter<-letterstoconsider[1]
redletter<-letterstoconsider[[1]]
redletter<-letterstoconsider[1,1]
letterstoconsider<-df_bingos$bingos[1]
redletter<-substr(letterstoconsider,1,1)
library("tidyverse")
library("stringi")
rm(list=ls())
setwd("/Users/hhs/Dropbox/Private documents/findordene/admin/extract_words")
# load data
df<-read_delim("RO2012 fuldformsliste 2020.csv",delim = ";",col_names=FALSE)
df<-data.frame(ord=c(df$X2))
# Cleaning
set.seed(2023)
# remove short words
df<-df%>%filter(nchar(ord)>3)
# remove if it contains any special symbols
letters_only <- function(x) !grepl("[^A-Za-z]", x)
df<-df%>%filter(letters_only(ord))
# make all letters lowcase
df<-df%>%mutate(ord=tolower(ord))
# no duplicates
df<-unique(df)
# find potential bingo words
df$bingos<-gsub('(?:(.)(?=(.*)\\1))', '', df$ord, perl = TRUE)
df_bingos<-filter(df,nchar(bingos)==7)
# Lists
letters<-list()
words<-list()
letterstoconsider<-df_bingos$bingos[1]
redletter<-substr(letterstoconsider,1,1)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters[1]<-df_bingos$bingos[1]
words[1]<-list(temp$ord)
View(words)
lenght(df_bingos)
length(df_bingos)
leng(df_bingos)
nrow(df_bingos)
for (i in range(1,5)){
print(i)
}
for (i in seq(1,5)){
print(i)
}
for (i in seq(1,5)){
letterstoconsider<-df_bingos$bingos[i]
redletter<-substr(letterstoconsider,1,1)
}
substr(letterstoconsider,1,1)
substr(letterstoconsider,2,1)
substr(letterstoconsider,2,2)
substr(letterstoconsider,3,3)
for (i in seq(1,5)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
redletter<-substr(letterstoconsider,i,i)
}
for (i in seq(1,5)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (i in seq(1,7)){
redletter<-substr(letterstoconsider,i,i)
}
}
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,5)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (i in seq(1,7)){
redletter<-substr(letterstoconsider,i,i)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters[1]<-df_bingos$bingos[1]
words[1]<-list(temp$ord)
rm(temp)
}
}
# Lists
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,5)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters[i]<-df_bingos$bingos[1]
words[i]<-list(temp$ord)
rm(temp)
}
}
View(letters)
View(words)
detach("package:tidylog", unload = TRUE)
# Lists
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,5)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
rm(temp)
}
}
View(letters)
View(words)
# Lists
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
rm(temp)
print(redletter)
}
}
df_bingos$bingos
df_bingos$bingos[1]
df_bingos$bingos[2]
df_bingos$bingos[3]
df_bingos$bingos[4]
View(df_bingos)
df_bingos<-mutate(df_bingos,str_sort(bingos))
View(df_bingos)
df_bingos<-mutate(df_bingos,a=str_sort(bingos))
View(df_bingos)
df_bingos<-mutate(df_bingos,a=str_sort(strsplit(bingos, split = "")))
df_bingos<-mutate(df_bingos,a=stri_order(bingos))
View(df_bingos)
striHelper <- function(x) stri_c(x[stri_order(x)], collapse = "")
v1 <- vapply(stri_split_boundaries(df$bingos, type = "character"), striHelper, "")
v1[1]
v1[2]
bingos <- vapply(stri_split_boundaries(df$bingos, type = "character"), striHelper, "")
bingosu<-unique(bingos)
bingosu<-data.frame(bingos=unique(bingos))
View(bingosu)
library("tidyverse")
library("stringi")
rm(list=ls())
setwd("/Users/hhs/Dropbox/Private documents/findordene/admin/extract_words")
# load data
df<-read_delim("RO2012 fuldformsliste 2020.csv",delim = ";",col_names=FALSE)
df<-data.frame(ord=c(df$X2))
# Cleaning
set.seed(2023)
# remove short words
df<-df%>%filter(nchar(ord)>3)
# remove if it contains any special symbols
letters_only <- function(x) !grepl("[^A-Za-z]", x)
df<-df%>%filter(letters_only(ord))
# make all letters lowcase
df<-df%>%mutate(ord=tolower(ord))
# no duplicates
df<-unique(df)
# find potential bingo words
df$bingos<-gsub('(?:(.)(?=(.*)\\1))', '', df$ord, perl = TRUE)
df_bingos<-filter(df,nchar(bingos)==7)
# remove duplicates
striHelper <- function(x) stri_c(x[stri_order(x)], collapse = "")
bingos <- vapply(stri_split_boundaries(df$bingos, type = "character"), striHelper, "")
df_bingos<-data.frame(bingos=unique(bingos))
# Lists
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
rm(temp)
print(redletter)
}
}
View(words)
View(df_bingos)
striHelper <- function(x) stri_c(x[stri_order(x)], collapse = "")
bingos <- vapply(stri_split_boundaries(df_bingos$bingos, type = "character"), striHelper, "")
df_bingos<-data.frame(bingos=unique(bingos))
View(df_bingos)
library("tidyverse")
library("stringi")
rm(list=ls())
setwd("/Users/hhs/Dropbox/Private documents/findordene/admin/extract_words")
# load data
df<-read_delim("RO2012 fuldformsliste 2020.csv",delim = ";",col_names=FALSE)
df<-data.frame(ord=c(df$X2))
# Cleaning
set.seed(2023)
# remove short words
df<-df%>%filter(nchar(ord)>3)
# remove if it contains any special symbols
letters_only <- function(x) !grepl("[^A-Za-z]", x)
df<-df%>%filter(letters_only(ord))
# make all letters lowcase
df<-df%>%mutate(ord=tolower(ord))
# no duplicates
df<-unique(df)
# find potential bingo words
df$bingos<-gsub('(?:(.)(?=(.*)\\1))', '', df$ord, perl = TRUE)
df_bingos<-filter(df,nchar(bingos)==7)
# remove duplicates
striHelper <- function(x) stri_c(x[stri_order(x)], collapse = "")
bingos <- vapply(stri_split_boundaries(df_bingos$bingos, type = "character"), striHelper, "")
df_bingos<-data.frame(bingos=unique(bingos))
View(df_bingos)
# Lists
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
rm(temp)
print(redletter)
}
}
View(words)
# Lists
letters<-list()
words<-list()
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
if (nrow(temp)<41){
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
}
rm(temp)
print(redletter)
}
}
# Lists
letters<-list(nrow(df_bingos*7))
letters<-list(nrow(df_bingos)*7)
letters<-list(N=nrow(df_bingos)*7)
?list
letters<-vector("list", nrow(df_bingos)*7)
library("tidyverse")
library("stringi")
rm(list=ls())
setwd("/Users/hhs/Dropbox/Private documents/findordene/admin/extract_words")
# load data
df<-read_delim("RO2012 fuldformsliste 2020.csv",delim = ";",col_names=FALSE)
df<-data.frame(ord=c(df$X2))
# Cleaning
set.seed(2023)
# remove short words
df<-df%>%filter(nchar(ord)>3)
# remove if it contains any special symbols
letters_only <- function(x) !grepl("[^A-Za-z]", x)
df<-df%>%filter(letters_only(ord))
# make all letters lowcase
df<-df%>%mutate(ord=tolower(ord))
# no duplicates
df<-unique(df)
# find potential bingo words
df$bingos<-gsub('(?:(.)(?=(.*)\\1))', '', df$ord, perl = TRUE)
df_bingos<-filter(df,nchar(bingos)==7)
# remove duplicates
striHelper <- function(x) stri_c(x[stri_order(x)], collapse = "")
bingos <- vapply(stri_split_boundaries(df_bingos$bingos, type = "character"), striHelper, "")
df_bingos<-data.frame(bingos=unique(bingos))
# Lists
letters<-vector("list", nrow(df_bingos)*7)
words<-vector("list", nrow(df_bingos)*7)
system.time({
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
if (nrow(temp)<41){
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
}
rm(temp)
print(redletter)
}
}
})
letters<-vector("list", nrow(df_bingos)*7)
words<-vector("list", nrow(df_bingos)*7)
system.time({
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
if (nrow(temp)<41){
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
}
rm(temp)
print(paste(i/nrow(df_bingos),"%",sep=""))
}
}
})
# Lists
letters<-vector("list", nrow(df_bingos)*7)
words<-vector("list", nrow(df_bingos)*7)
system.time({
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
if (nrow(temp)<41){
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
}
rm(temp)
print(paste(sprintf("%0.1f%%",i/nrow(df_bingos)),"%",sep=""))
}
}
})
# Lists
letters<-vector("list", nrow(df_bingos)*7)
words<-vector("list", nrow(df_bingos)*7)
system.time({
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
if (nrow(temp)<41){
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
}
rm(temp)
print(paste(sprintf("%0.3f%",100*i/nrow(df_bingos)),"%",sep=""))
}
}
})
# Lists
letters<-vector("list", nrow(df_bingos)*7)
words<-vector("list", nrow(df_bingos)*7)
system.time({
# Loop over all bingos
#for (i in range(1,nrow(df_bingos))){
for (i in seq(1,2)){
letterstoconsider<-df_bingos$bingos[i]
# Loop over all letters
for (j in seq(1,7)){
redletter<-substr(letterstoconsider,j,j)
# Remove all letters not in list
temp<-df%>%
filter(str_detect(ord,redletter))%>%                                              # Remove words not including the red letter
filter(nchar(str_remove_all(ord,paste("[",letterstoconsider,"]",sep="")))==0)     # Remove words that use other letters
# Check how many words? If more than 50 we drop them, otherwise safe them
if (nrow(temp)<41){
letters<-append(letters,df_bingos$bingos[1])
words<-append(words,list(temp$ord))
}
rm(temp)
print(paste(sprintf("%0.3f",100*i/nrow(df_bingos)),"%",sep=""))
}
}
})
nrow(df_bingos)/2
4.5*nrow(df_bingos)/2
(4.5*nrow(df_bingos)/2)/60
((4.5*nrow(df_bingos)/2)/60)/60
